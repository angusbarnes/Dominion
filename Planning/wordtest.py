import random
import re
from tqdm import tqdm

# Word lists for different tags
word_lists = {
    "first_parts": [
        "Exo",
        "Ino",
        'Quo',
        'Try',
        'Temp',
        'Hexo',
        'Att',
        'Ait',
        'El',
        'Bio',
        'Iom',
        'Nemo',
        'Dark',
        'War',
        'Ship',
        "Carto",
        'Plast',
        'Cas',
        'Tree',
        'Steel',
        'Tech',
        'Fight',
        'Combat',
        'Mine',
        'Dig',
        'Zeno',
        'Geo',
        'Hope',
        'Pincer',
        'Ell',
        'Disto',
        'Micro',
        'Defend',
        'Intro',
        'Kylo',
        'Cryo',
        'Creo',
        'Tech',
        'Deep',
        "Astro",
        "Neo",
        "Electro",
        "Lumo",
        "Proto",
        "Cyber",
        "Nano",
        "Stello",
        "Chrono",
        "Mega",
        "Omni",
        "Hyper",
        "Giga",
        "Phono",
        "Volt",
        "Xeno",
        "Arco",
        "Pluto",
        "Terra",
        "Aero",
        "Sonic",
        "Cryo",
        "Evo",
        "Glint",
        "Pyro",
        "Strato",
        "Lumino",
        "Draco",
        "Vecto",
        "Magna",
        'Battle',
        "Eld",
        "Myth",
        "Arc",
        "Myst",
        "Drak",
        "Rune",
        "Obel",
        "Shade",
        "Void",
        "Soul",
        "Thal",
        "Ash",
        "Lum",
        "Orr",
        "Fey",
        "Grim",
        "Hex",
        "Seer",
        "Gild",
        "Wyrm",
        "Crypt",
        "Crown",
        "Sage",
        "Aether",
        "Ebon",
        "Lich",
        "Astral",
        "Sanct",
        "Spire",
        "Tempest"
    ],
    "second_parts": [
        "plex",
        'mage',
        "pest",
        "ion",
        "ium",
        "ist",
        "quil",
        "ica",
        "cia",
        "dex",
        "trium",
        'deum',
        'eon',
        'yssium',
        'ship',
        'bore',
        'wix',
        'zeno',
        'nox',
        'ox',
        'ite',
        'opal',
        'cism',
        'xon',
        'zene',
        'zinth',
        'pian',
        'ist',
        'end',
        'ed',
        'th',
        'cro',
        'ine',
        'one',
        'tronix',
        'ters',
        'ify',
        'soft',
        'kane',
        'ington',
        "phage",
        "genic",
        "core",
        "sphere",
        "lyte",
        "form",
        "ionix",
        "forge",
        "wave",
        "nova",
        "dine",
        "onic",
        "scape",
        "flux",
        "linea",
        "plexus",
        "loid",
        "spire",
        "graph",
        "vane",
        "synth",
        "frame",
        "prime",
        "cast",
        "shell",
        "node",
        "byte",
        "drive",
        "storm",
        "arch",
        'star',
        "wyrm",
        "spire",
        "veil",
        "shard",
        "ward",
        "bane",
        "forge",
        "grasp",
        "hollow",
        "haven",
        "crest",
        "ember",
        "thorn",
        "cairn",
        "glyph",
        "mire",
        "shade",
        "crypt",
        "pyre",
        "sigil",
        "watch",
        "vex",
        "crown",
        "bound",
        "hex",
        "rune",
        "fane",
        "moon",
        "wrath",
        "wring"
    ],
    "noun": [
        "Petroleum",
        "Gamblers",
        "Chaos",
        "Rimworld",
        "Solar",
        "Stellar",
        "Canary",
        'Oblivion',
        "Panda",
        "Bison",
        "Oryx",
        'Bane',
        'Stark',
        'Desert',
        'Mountain',
        'Zero',
        'Void',
        'Null',
        "Magnet",
        "Computer",
        "Shenzen",
        "Hong Kong",
        "Canadian",
        'Baltic',
        'Spitzbergen',
        'Arctic',
        'Snow',
        'Rain',
        'Fire',
        'Hellstorm',
        'Volcanic',
        "Pennington",
        "Choi",
        "Walters",
        "Farmers",
        "Bankers",
        "Warlords",
        "Germany",
        "African Nations",
        "Green",
        'Shipbuilding',
        "Red",
        "Black",
        "Mumbai",
        "Nuclear",
        "Cobalt",
        "Weapons",
        "Money",
        "Colonisers",
        "Expansionist",
        "Wealthy",
        "Finance",
        "Plutonium",
        "Ships",
        'Military',
        "Halo",
        'Alkane'
        "Shinto",
        "Carson", 
        "Panamerica", 
        "Europe", 
        "Candor", 
        "Steve", 
        "Iron",
        'Banking',
        'Armsdealer',
        "Darkwood", 
        "Barnes", 
        "Gem",
        'Diamond', 
        'Gold',
        'Cooper',
        'Oil',
        'Waterhouse',
        'Cooper',
        'Von Neumann',
        'Hamza',
        'Armstrong',
        'Kwan',
        'Gibson',
        'Mining',
        'Marshall',
        'Commander',
        'Tasman',
        'Musk',
        'Bezos',
        'Meta',
        'Bantam'
        'Euphoric',
        'Aurora',
        'Wilden',
        'Eternal',
        'Ethereal',
        'Diamond',
        'Tech',
        'Techno',
        'Technology',
        'Research',
        'Science',
        'Ocean',
        'Resource',
        'Semiconductor',
        'Agriculture',
        'Industrial',
        'Exxon',
        'Saudi',
        'China',
        'Korean',
        'The Arts',
        'Windsor', 
        'Montgomery', 
        'Humphries', 
        'Beaumont', 
        'Remington', 
        'Carrington',
        'Callaway',
        'Kensington',
        'Sinclair',
        'Potato',
        'Pinghit',
        'Mine',
        'Innovation',
        'Ravenhill',
        'Seaborn',
        'Aerospace',
        "Defense",
        'Construction',
        'Australian',
        'Robotics',
        'Steel',
        'Shipbuilders',
        'Trade',
        'Merchant',
        'BlackRock',
        'Atlantic',
        'Pacific',
        'Telecommunications',
        'Retail',
        'Electric',
        'Microchip',
        'Nanotech',
        'Biotech',
        'Rosthchilds',
        'Illuminati',
        'Dupont',
        'Gas',
        'Water',
        'Stone',
        'Hardman',
        'Naval',
        'Maritime',
        'Peace',
        'Paradox',
        'Fang',
        'Wing',
        'Latin',
        'New Roman',
        'Dempster',
        'Quo',
        'Plex',
        'Grogan',
        'Timeless',
        'Logistics',
        'Vulcan',
        'Artemis',
        'Sanguine',
        'Zenith',
        'Eldritch',
        'Redemption',
        'Catalyst',
        'Blood',
        'Bloodhound',
        'Wolves',
        'Celestial',
        'Apex',
        'Alpha',
        'Crimson',
        'Abyss',
        'Abyssal',
        'Gorilla',
        'Helios',
        'Mars',
        'Polar',
        'Demon',
        'Revenant',
        'Dawn',
        'Dusk',
        'Midnight',
        'Dread',
        'Dreadnaught',
        'Hyperborean',
        'Dragon'
    ],
    "group": [
        "Protectors",
        'Realm',
        "Miners",
        'Triumvirate',
        'Harbingers',
        'Hunters',
        'Scavengers',
        "Warriors",
        'Students',
        "Crusaders",
        "Kingdom",
        "Division",
        "Mountaineers",
        "Mining Clan",
        "Shipbuilding Co",
        "Resistance",
        "Society",
        'Sedimentary',
        'Investment Fund',
        'Children',
        'LLC',
        'Band',
        'Partners',
        '& Co.',
        'Media',
        'Contingent',
        'Ventures',
        'Plutocracy',
        'Shipyard',
        "Providers",
        'Kinship',
        'Family of Companies',
        'PTY. LTD',
        'Inc.',
        "Gooners",
        "Foundation",
        "Order",
        "Rebels",
        "Legion",
        "Empire",
        "Collective",
        "Federation",
        "Alliance",
        "Cartel", 
        "Corp.",
        'Clan',
        "Combine", 
        "Trust",
        "Ascendency",
        "Holdings",
        "Capital",
        "Incursion",
        "Establishment",
        "Imperium",
        "Bank",
        "Collective",
        "Industries",
        "Industrial",
        "Brotherhood",
        "Sisterhood",
        "Conglomerate",
        "Cooperative",
        "Coalition",
        "Syndicate",
        "Group",
        "Association",
        "Dominion",
        "Republic",
        "Coalition",
        "Sovereignty",
        "Alliance",
        "Syndicate",
        "League",
        "Confederacy",
        "Galactic",
        "International",
        "Government",
        "Regime",
        "Scholars",
        "Templars",
        "Republic",
        "Consortium",
        'Guild',
        'Financial',
        'Telecoms',
        'Tech',
        'Union',
        'Mircochips',
        'Nanotech',
        'Biotech',
        'Compass',
        'Way',
        'Cryonics',
        'Democracy',
        'Enterprises',
        'Allignment',
        'Company',
        'Administration',
        "Regency",
        'Monarchy',
        'Services',
        'Unlimited',
        'Manufacturers',
        'Solutions',
        'Labs',
        'Bureau',
        'Worldwide',
        'Properties',
        'Technologies',
        'Dynamics',
        'Knights',
        "Commonwealth",
        "Directorate",
        "Agenda"
    ],
    "a": [
        "Majestic",
        "People's",
        "Honorable",
        'Eternal',
        'Ethereal',
        "Religious",
        "Open",
        "Underground",
        "Ancient", 
        "Fallen", 
        "Glorious",
        "Divine",
        'Volcanic',
        "Heavenly",
        "Heavy",
        "Large",
        "International",
        "Governed",
        "Dark",
        "Despotic",
        "Industrial",
        'Light',
        'United',
        'Atlantic',
        'Asian',
        "Green",
        "Red",
        "Black",
        "Extensive",
        "Imperial",
        'European',
        'Earthly',
        'Forth',
        'Seventh',
        'Third',
        'First',
        'General',
        'Global',
        'Xenolithic',
        'Xenotropic',
        'Socialist',
        'Capitalist',
        'Communist',
        'Democractic',
        'Authoritarian',
        'Markright',
        'Benevolent',
        'Unkown',
        'Insistent',
        'Partisan',
        'Fundamental',
        'Listil',
        'Canogen',
        'Tryquil',
        'Thenok',
        'Primordial',
        'Omnipotent',
        'Grand',
        'Broken',
        'Timeless',
        'Arcane',
        "Expansionist",
        "Worldwide",
        "Ultimate",
        'Didactic'
    ],
    "verb" : [
        "Seek",
        "Follow",
        "Find",
        "Crusad",
        "Chas",
        'Fight',
    ]
}

def parse_pattern(pattern, word_lists):
    def replace_match(match):
        # Extract content within brackets
        content = match.group(1)
        selected_tag = content
        
        # Handle optional parts with percentage chance
        if ":" in content:
            tag, chance = content.split(":")
            chance = int(chance.strip('%'))
            if random.randint(1, 100) > chance:
                return ""  # Skip this part
            else:
                selected_tag = tag
                #print(f"Trying to add adj of: {selected_tag}")

        # Handle multiple options with `|`
        if "|" in content:
            tags = content.split("|")
            selected_tag = random.choice(tags)
        
        # Select a random word from the appropriate list
        if selected_tag in word_lists:
            return random.choice(word_lists[selected_tag])
        
        #print("Returned selected tag: " + f"[{selected_tag}]")
        return f"[{selected_tag}]"  # Return unprocessed if tag not found

    # Replace all placeholders in the pattern
    replaced = re.sub(r'\[([^\]]+)\]', replace_match, pattern)
    return replaced.replace("  ", " ")

# Example patterns
patterns = [
    "The [a:20%] [group] of [a:10%] [noun|fictional_words]",
    "The [a:20%] [noun|fictional_words] [a:10%] [group]",
    "[noun|a|fictional_words] [group]",
    "[noun|a] [noun|a|fictional_words] [group]",
    "[noun|a|group|fictional_words][noun|a|group|fictional_words]"
]


fictional_words = []

for part in word_lists["first_parts"]:
    for second in word_lists["second_parts"]:
        fictional_words.append(f"{part}{second}")

word_lists["fictional_words"] = fictional_words


names = []

for _ in tqdm(range(200000)):  # Generate 10 examples
    pattern = random.choice(patterns)
    #print(parse_pattern(pattern, word_lists))
    name = parse_pattern(pattern, word_lists) + '\n'
    while name in names:
        name = parse_pattern(pattern, word_lists) + '\n'

    names.append(name)

with open('names.txt', 'w+') as file:
    file.writelines(names)

